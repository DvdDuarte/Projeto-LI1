-- | Este módulo define funções comuns da Tarefa 4 do trabalho prático.
module Tarefa4_2019li1g126 where

import LI11920
import Tarefa0_2019li1g126
import Tarefa2_2019li1g126
-- * Testes
-- | Testes unitários da Tarefa 4.
--
-- Cada teste é um par (/tempo/,/'Mapa'/,/'Jogador'/).
testesT4 :: [(Double,Mapa,Jogador)]
testesT4 = []

-- * Funções principais da Tarefa 4.

-- | Avança o estado de um 'Jogador' um 'passo' em frente, durante um determinado período de tempo.
passo :: Double -- ^ O tempo decorrido.
     -> Mapa    -- ^ O mapa utilizado.
     -> Jogador -- ^ O estado anterior do 'Jogador'.
     -> Jogador -- ^ O estado do 'Jogador' após um 'passo'.
passo t m j = move t m (acelera t m j)

-- | Altera a velocidade de um 'Jogador', durante um determinado período de tempo.
acelera :: Double -- ^ O tempo decorrido.
     -> Mapa    -- ^ O mapa utilizado.
     -> Jogador -- ^ O estado anterior do 'Jogador'.
     -> Jogador -- ^ O estado do 'Jogador' após acelerar.
acelera = undefined

-- | Altera a posição de 'Jogador', durante um determinado período de tempo.
move :: Double -- ^ O tempo decorrido.
     -> Mapa    -- ^ O mapa utilizado.
     -> Jogador -- ^ O estado anterior do 'Jogador'.
     -> Jogador -- ^ O estado do 'Jogador' após se movimentar.
move = undefined

-- | A atualização da velocidade do jogador está dividida em dois casos: 1) quando o jogador está no chão e 2) quando o jogador está no ar.
-- | No primeiro caso, a nova velocidade (v') do jogador é calculada através da seguinte fórmula:

{-
data Jogador--   p                     d                         v                               c               e
    = Jogador { pistaJogador :: Int, distanciaJogador :: Double, velocidadeJogador :: Double, colaJogador :: Int, estadoJogador :: EstadoJogador }
  deriving (Read,Show,Eq) -}
-- t é o instante de tempo em questao
velocidadeChao:: Int-> Jogador -> Double -> Estado -> Estado
velocidadeChao njogador (Jogador p d v c (Chao e)) t (Estado mapa jogs)  | a>=0 = (Estado mapa (atualizaIndiceLista njogador (Jogador p d a c (Chao e)) jogs )) 
                                                                       | otherwise= (Estado mapa (atualizaIndiceLista njogador (Jogador p d 0 c (Chao e)) jogs ) )
         where accelMota = if (v<2 && e==True) then 1 else 0
               peca = identificaPecaAtual njogador (Jogador p d v c (Chao e)) (Estado mapa jogs)
               a= (v  + ((accelMota-((atrito peca)*v))*t))

atrito::Peca->Double
atrito (Rampa x a1 a2) | (x== Lama )  = 1.50
                       | (x== Relva)  = 0.75
                       | (x== Terra)  = 0.25
                       | (x== Boost)  = (-0.50)
                       | (x== Cola )  = 3.00

atrito (Recta x a)     | (x== Lama )  = 1.50
                       | (x== Relva)  = 0.75
                       | (x== Terra)  = 0.25
                       | (x== Boost)  = (-0.50)
                       | (x== Cola )  = 3.00